import java.io.*;
import java.net.*;

import javax.swing.JFrame;

class TCPClient
{
	private static Socket clientSocket;
	private static Socket dataSocket;
	private static DataOutputStream clientStatus, result;
	private static boolean hasStream, bufferOverload;
	
	public static void main(String argv[]) throws Exception
 	{
		hasStream = false;
		bufferOverload = false;
		init();
		while(true){
			clientStatus.writeBytes(createNewStatusPacket(false));
		}
	 // outToServer.writeBytes(sentence + '\n');
	 // modifiedSentence = inFromServer.readLine();
	  //System.out.println("FROM SERVER: " + modifiedSentence);
	  //centralGUI.outputLabel.setText("FROM SERVER: " + modifiedSentence);
	  //clientSocket.close();
 	}
	
	private static void init() throws UnknownHostException, IOException{
		clientSocket = new Socket("localhost", 9912);
		dataSocket = new Socket("localhost", 9913);
		clientStatus = new DataOutputStream(clientSocket.getOutputStream());
		result = new DataOutputStream(dataSocket.getOutputStream());
		
		//start the GUI
		BasicFrame centralGUI = new BasicFrame();
		centralGUI.setTitle("Client");
		centralGUI.setSize(300,300);
		centralGUI.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		centralGUI.setVisible(true);
	}
	
	private static byte[] createNewStatusPacket(boolean close){
		byte[] payload = new byte[2];
		//0-0-0 is idle
		//0-0-1 is data stream go
		//0-1-0 is data stream wait
		//0-1-1 is data stream end
		if(close){
			payload[0] = 1;
			payload[1] = 1;
			return payload;
		}
		if(!hasStream){
			payload[0] = 0;
			payload[1] = 0;
		} else{
			if(!bufferOverload){
				payload[0] = 1;
				payload[1] = 0;
			} else{
				payload[0] = 0;
				payload[1] = 1;
			}
		}
		return payload;
	}
}